events {}

# The http block defines how NGINX should handle HTTP traffic.
http {

# Timeout value for keep-alive connections with the client
  keepalive_timeout  65;

  # Redirect http traffic
  server {
      listen 80;
      server_name openbroadwaydata.com;

      # # Configure NGINX to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
      location / {
          # The following allows flask to send urls to the domain name;
          proxy_set_header Host $host;

          # Automatically route HTTP to HTTPS
          return 301 https://$server_name$request_uri;

      }
  }

  server {
      listen 80;
      server_name www.openbroadwaydata.com;

      # # Configure NGINX to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
      location / {
          # The following allows flask to send urls to the domain name;
          proxy_set_header Host $host;

          # Automatically route HTTP to HTTPS
          return 301 https://$server_name$request_uri;

      }
  }

  # Allow encrypted connections to openbroadwaydata.com
  server {
      listen 443 ssl;
      server_name openbroadwaydata.com;
      ssl_certificate "/etc/letsencrypt/live/openbroadwaydata.com/fullchain.pem";
      ssl_certificate_key "/etc/letsencrypt/live/openbroadwaydata.com/privkey.pem";

      # Following configurations are for serving static content and as a reverse proxy.
      location / {
          # Define the location of the proxy server to send the request to
          proxy_pass http://0.0.0.0:5010;
          # The following allows flask to send urls to the domain name;
          proxy_set_header Host $host;

      }
  }
  # Allow encrypted connections to www.openbroadwaydata.com
  server {
      listen 443 ssl;
      server_name www.openbroadwaydata.com;
      ssl_certificate "/etc/letsencrypt/live/www.openbroadwaydata.com/fullchain.pem";
      ssl_certificate_key "/etc/letsencrypt/live/www.openbroadwaydata.com/privkey.pem";

      location / {
          # Define the location of the proxy server to send the request to
          proxy_pass http://0.0.0.0:5010;
          # The following allows flask to send urls to the domain name;
          proxy_set_header Host $host;

      }
  }

}
